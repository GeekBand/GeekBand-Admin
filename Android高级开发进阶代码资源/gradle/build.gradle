apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))

}

def keyStore = file(project.property("MyProject.properties"))

if(project.hasProperty("MyProject.properties")
        && new File(project.property("MyProject.properties")).exists()) {

    Properties props = new Properties()
    props.load(new FileInputStream(file(project.property("MyProject.properties"))))


    android {
        compileSdkVersion 23
        buildToolsVersion "23.0.0"

        defaultConfig {
            applicationId "com.example.gradle"
            minSdkVersion 15
            targetSdkVersion 23
            versionCode 1
            versionName "1.0"
        }

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LGPL2.1'
        }

        lintOptions {
            disable 'MissingTranslation', 'ExtraTranslation'
        }

        lintOptions {
            abortOnError false
        }

        signingConfigs {
            release {
                storeFile file(props['keystore'])
                storePassword props['keystore.password']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }

        buildTypes {


            release {
                // 不显示Log
                buildConfigField "boolean", "LOG_DEBUG", "false"

                debuggable false
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                if (keyStore.exists()) {
                    println "using release key"
                    signingConfig signingConfigs.release
                } else {
                    println "---------------using default key---------------"
                }

                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            // 输出apk名称为gradle_v1.0_2015-01-15_wandoujia.apk
                            def fileName = "gradle_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }

            productFlavors {
                fir {
                    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "fir"]
                }
                GooglePlay {
                    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "GooglePlay"]
                }
                Xiaomi {
                    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Xiaomi"]
                }
                _360 {
                    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
                }
                Baidu {
                    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Baidu"]
                }
                Wandoujia {
                    manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Wandoujia"]
                }
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }

    dependencies {
        compile fileTree(dir: 'libs', include: ['*.jar'])
        compile 'com.android.support:appcompat-v7:23.0.0'
    }

}
